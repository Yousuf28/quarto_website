{"title":"R Basic with dplyr and data.table","markdown":{"yaml":{"title":"R Basic with dplyr and data.table","author":"Yousuf Ali","date":"2024-05-29","categories":["code","R","data.table","dplyr"],"format":"html"},"headingText":"data.table","containsRefs":false,"markdown":"\n\n\n\n:::{layout-ncol=3}\n\n```{r warning=FALSE, message=FALSE}\nlibrary(data.table)\ndt <- mtcars\ndata.table::setDT(dt)\n\n```\n\n### dplyr \n\n```{r warning=FALSE, message=FALSE}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(magrittr)\ndf <- mtcars\n```\n\n```{r}\nbaseR <- aggregate(. ~ cyl, data = df, FUN = length)\nbaseR <- baseR[c(\"cyl\", \"mpg\")]  # Adjust column names if needed\nprint(baseR)\n\n```\n\n:::\n\n### group by\n\n\n:::{layout-ncol=2}\n\n\n```{r}\ndt[, .(n=.N), by= .(cyl)]\n\n```\n\n\n```{r warning=FALSE}\ndf %>% group_by(cyl) %>% \n  summarize(n=n())\n```\n\n:::\n\n\n::: {layout-ncol=2}\n\n```{r}\ndt[, .(avg= mean(mpg)), by= .(cyl)]\n```\n\n\n```{r message=FALSE, warning=FALSE}\n\ndf %>% group_by(cyl) %>% \n  summarize(avg=mean(mpg))\n\n```\n\n:::\n\n\n::: {layout-ncol=2}\n\n```{r}\n\ndt[, .(avg= mean(mpg)), by= .(cyl,gear)]\n\n```\n\n```{r warning=FALSE, message=FALSE}\n\ndf %>% group_by(cyl,gear) %>% \n  summarize(avg=mean(mpg))\n\n```\n\n:::\n\n# pivot\n\n- [link](https://www.statology.org/pivot_longer-in-r/)\n\n::: {layout-ncol=2}\n\n\n```{r}\n# wide dataframe\nwide_dt <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\ndata.table::setDT(wide_dt)\nhead(wide_dt)\n\n```\n\n\n```{r}\nwide_df <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\nwide_df\n```\n\n:::\n\n::: {layout-ncol=2}\n\n\n```{r}\n# wide dataframe to long dataframe\nwide_to_long <- data.table::melt(wide_dt,\n                                 measure.vars=c('year1','year2'),\n                                 variable.name= 'year',\n                                 value.name = 'points')\nwide_to_long\n\n```\n\n\n```{r}\nlong_df <- tidyr::pivot_longer(wide_df,\n                    cols=c('year1', 'year2'),\n                    names_to='year',\n                    values_to='points')\n\nlong_df\n```\n\n:::\n\n::: {layout-ncol=2}\n\n```{r}\n# long dataframe to wide dataframe\nlong_to_wide <- data.table::dcast(wide_to_long, \n                                  player ~ year,\n                                  value.var = 'points')\nlong_to_wide\n```\n\n```{r}\nlong_to_wide_df <- tidyr::pivot_wider(long_df,\n                              names_from = 'year',\n                              values_from = 'points')\nlong_to_wide_df\n```\n\n:::\n\n#### pivot in base R with reshape()\n##### long to wide\n::: {layout-ncol=2}\n\n```{r}\n# base R, reshape function\nbase_wide <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\nbase_wide\n```\n\n\n\n```{r}\n# wide to long\nlong_df <- reshape(\n  base_wide,\n  direction = \"long\",\n  varying = list(c(\"year1\", \"year2\")),\n  v.names = \"points\",\n  idvar = \"player\",\n  times = c(\"year1\", \"year2\"),\n  timevar = \"year\"\n)\nlong_df\n\n```\n\n:::\n\n#### long to wide\n::: {layout-ncol=2}\n\n```{r}\n# long data\nhead(wide_to_long)\n```\n\n\n```{r}\n# from long to wide\nreshape(wide_to_long, direction = 'wide',idvar = 'player',\n        timevar = 'year', v.names = 'points', sep = '_')\n```\n\n\n::: \n\n### Join \n\n::: {layout-ncol=2}\n\n```{r}\nx <- data.table(Id  = c(\"A\", \"B\", \"C\", \"C\"),\n                X1  = c(1L, 3L, 5L, 7L),\n                XY  = c(\"x2\", \"x4\", \"x6\", \"x8\"),\n                key = \"Id\")\nx\n\n```\n\n```{r}\n\ny <- data.table(Id  = c(\"A\", \"B\", \"B\", \"D\"),\n                Y1  = c(1L, 3L, 5L, 7L),\n                XY  = c(\"y1\", \"y3\", \"y5\", \"y7\"),\n                key = \"Id\")\n\ny\n```\n\n:::\n\n\n::: {layout-ncol=2}\n\n```{r}\ny[x, on = \"Id\"]\n# y[x, on = .(Id_x=Id_y)] # if different column name\n# merge(x, y, all.x = TRUE, by = \"Id\")\n# merge(x, y, all.x = TRUE, by.x = \"x_column\", by.y = \"y_column\") \n# if column name different\n\n```\n\n```{r}\nleft_join(x, y, by = \"Id\")\n# left_join(x, y, by.x = \"x_column\", by.y= \"y_column\") # if column\n#name different\n\n```\n\n:::\n\n\n\n::: {layout-ncol=2}\n\n\n\n```{r}\nx[y, on = \"Id\"]\n# merge(x, y, all.y = TRUE, by = \"Id\")\n\n```\n\n```{r}\nright_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n#### matching rows from both x and y\n\n::: {layout-ncol=2}\n\n```{r}\nx[y, on = \"Id\", nomatch = 0]\n# merge(x, y)\n\n```\n\n```{r}\ninner_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n#### all the rows from x and y\n::: {layout-ncol=2}\n\n```{r}\nmerge(x, y, all = TRUE, by = \"Id\")\n\n```\n\n```{r}\nfull_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n#### Return rows from x matching y\n\n::: {layout-ncol=2}\n\n```{r}\nunique(x[y$Id, on = \"Id\", nomatch = 0])\n\n```\n\n```{r}\nsemi_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n\n#### Return rows from x not matching y\n\n::: {layout-ncol=2}\n\n```{r}\n\nx[!y, on = \"Id\"]\n\n```\n\n```{r}\nanti_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n## bind\n\n::: {layout-ncol=2}\n\n```{r}\nx <- mtcars[1:5, 1:4]\ny <- mtcars[6:10,1:4]\nx\n\n```\n\n```{r}\ny\n\n```\n\n:::\n\n```{r}\nx_dt <- data.table::as.data.table(x)\ny_dt <- data.table::as.data.table(y)\n\n```\n\n::: {layout-ncol=2}\n\n```{r}\ndata.table::rbindlist(list(x_dt,y_dt))\n# data.table::rbindlist(list(x_dt,y_dt), \n                        # use.names = FALSE,\n                          # fill = FALSE,\n#                       idcol = 'id')\n\n```\n\n```{r}\ndplyr::bind_rows(x,y)\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\nlibrary(reticulate)\n\ndf_py <- reticulate::r_to_py(df)\n\n```\n\n:::\n\n\n```{python}\nimport pandas as pd\n\n```\n\n\n\n```{python}\n\n\ndf_python = r.df_py\n\n# Print the Python dataframe\nprint(df_python)\n\n```\n\n\n\n```{python}\nresult_pandas = df_python.groupby('cyl').size().reset_index(name='n')\nprint(result_pandas)\n\n```\n","srcMarkdownNoYaml":"\n\n\n\n:::{layout-ncol=3}\n\n### data.table\n```{r warning=FALSE, message=FALSE}\nlibrary(data.table)\ndt <- mtcars\ndata.table::setDT(dt)\n\n```\n\n### dplyr \n\n```{r warning=FALSE, message=FALSE}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(magrittr)\ndf <- mtcars\n```\n\n```{r}\nbaseR <- aggregate(. ~ cyl, data = df, FUN = length)\nbaseR <- baseR[c(\"cyl\", \"mpg\")]  # Adjust column names if needed\nprint(baseR)\n\n```\n\n:::\n\n### group by\n\n\n:::{layout-ncol=2}\n\n\n```{r}\ndt[, .(n=.N), by= .(cyl)]\n\n```\n\n\n```{r warning=FALSE}\ndf %>% group_by(cyl) %>% \n  summarize(n=n())\n```\n\n:::\n\n\n::: {layout-ncol=2}\n\n```{r}\ndt[, .(avg= mean(mpg)), by= .(cyl)]\n```\n\n\n```{r message=FALSE, warning=FALSE}\n\ndf %>% group_by(cyl) %>% \n  summarize(avg=mean(mpg))\n\n```\n\n:::\n\n\n::: {layout-ncol=2}\n\n```{r}\n\ndt[, .(avg= mean(mpg)), by= .(cyl,gear)]\n\n```\n\n```{r warning=FALSE, message=FALSE}\n\ndf %>% group_by(cyl,gear) %>% \n  summarize(avg=mean(mpg))\n\n```\n\n:::\n\n# pivot\n\n- [link](https://www.statology.org/pivot_longer-in-r/)\n\n::: {layout-ncol=2}\n\n\n```{r}\n# wide dataframe\nwide_dt <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\ndata.table::setDT(wide_dt)\nhead(wide_dt)\n\n```\n\n\n```{r}\nwide_df <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\nwide_df\n```\n\n:::\n\n::: {layout-ncol=2}\n\n\n```{r}\n# wide dataframe to long dataframe\nwide_to_long <- data.table::melt(wide_dt,\n                                 measure.vars=c('year1','year2'),\n                                 variable.name= 'year',\n                                 value.name = 'points')\nwide_to_long\n\n```\n\n\n```{r}\nlong_df <- tidyr::pivot_longer(wide_df,\n                    cols=c('year1', 'year2'),\n                    names_to='year',\n                    values_to='points')\n\nlong_df\n```\n\n:::\n\n::: {layout-ncol=2}\n\n```{r}\n# long dataframe to wide dataframe\nlong_to_wide <- data.table::dcast(wide_to_long, \n                                  player ~ year,\n                                  value.var = 'points')\nlong_to_wide\n```\n\n```{r}\nlong_to_wide_df <- tidyr::pivot_wider(long_df,\n                              names_from = 'year',\n                              values_from = 'points')\nlong_to_wide_df\n```\n\n:::\n\n#### pivot in base R with reshape()\n##### long to wide\n::: {layout-ncol=2}\n\n```{r}\n# base R, reshape function\nbase_wide <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\nbase_wide\n```\n\n\n\n```{r}\n# wide to long\nlong_df <- reshape(\n  base_wide,\n  direction = \"long\",\n  varying = list(c(\"year1\", \"year2\")),\n  v.names = \"points\",\n  idvar = \"player\",\n  times = c(\"year1\", \"year2\"),\n  timevar = \"year\"\n)\nlong_df\n\n```\n\n:::\n\n#### long to wide\n::: {layout-ncol=2}\n\n```{r}\n# long data\nhead(wide_to_long)\n```\n\n\n```{r}\n# from long to wide\nreshape(wide_to_long, direction = 'wide',idvar = 'player',\n        timevar = 'year', v.names = 'points', sep = '_')\n```\n\n\n::: \n\n### Join \n\n::: {layout-ncol=2}\n\n```{r}\nx <- data.table(Id  = c(\"A\", \"B\", \"C\", \"C\"),\n                X1  = c(1L, 3L, 5L, 7L),\n                XY  = c(\"x2\", \"x4\", \"x6\", \"x8\"),\n                key = \"Id\")\nx\n\n```\n\n```{r}\n\ny <- data.table(Id  = c(\"A\", \"B\", \"B\", \"D\"),\n                Y1  = c(1L, 3L, 5L, 7L),\n                XY  = c(\"y1\", \"y3\", \"y5\", \"y7\"),\n                key = \"Id\")\n\ny\n```\n\n:::\n\n\n::: {layout-ncol=2}\n\n```{r}\ny[x, on = \"Id\"]\n# y[x, on = .(Id_x=Id_y)] # if different column name\n# merge(x, y, all.x = TRUE, by = \"Id\")\n# merge(x, y, all.x = TRUE, by.x = \"x_column\", by.y = \"y_column\") \n# if column name different\n\n```\n\n```{r}\nleft_join(x, y, by = \"Id\")\n# left_join(x, y, by.x = \"x_column\", by.y= \"y_column\") # if column\n#name different\n\n```\n\n:::\n\n\n\n::: {layout-ncol=2}\n\n\n\n```{r}\nx[y, on = \"Id\"]\n# merge(x, y, all.y = TRUE, by = \"Id\")\n\n```\n\n```{r}\nright_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n#### matching rows from both x and y\n\n::: {layout-ncol=2}\n\n```{r}\nx[y, on = \"Id\", nomatch = 0]\n# merge(x, y)\n\n```\n\n```{r}\ninner_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n#### all the rows from x and y\n::: {layout-ncol=2}\n\n```{r}\nmerge(x, y, all = TRUE, by = \"Id\")\n\n```\n\n```{r}\nfull_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n#### Return rows from x matching y\n\n::: {layout-ncol=2}\n\n```{r}\nunique(x[y$Id, on = \"Id\", nomatch = 0])\n\n```\n\n```{r}\nsemi_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n\n#### Return rows from x not matching y\n\n::: {layout-ncol=2}\n\n```{r}\n\nx[!y, on = \"Id\"]\n\n```\n\n```{r}\nanti_join(x, y, by = \"Id\")\n\n```\n\n:::\n\n## bind\n\n::: {layout-ncol=2}\n\n```{r}\nx <- mtcars[1:5, 1:4]\ny <- mtcars[6:10,1:4]\nx\n\n```\n\n```{r}\ny\n\n```\n\n:::\n\n```{r}\nx_dt <- data.table::as.data.table(x)\ny_dt <- data.table::as.data.table(y)\n\n```\n\n::: {layout-ncol=2}\n\n```{r}\ndata.table::rbindlist(list(x_dt,y_dt))\n# data.table::rbindlist(list(x_dt,y_dt), \n                        # use.names = FALSE,\n                          # fill = FALSE,\n#                       idcol = 'id')\n\n```\n\n```{r}\ndplyr::bind_rows(x,y)\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\n\n\n```\n\n:::\n::: {layout-ncol=2}\n\n```{r}\n\n\n```\n\n```{r}\nlibrary(reticulate)\n\ndf_py <- reticulate::r_to_py(df)\n\n```\n\n:::\n\n\n```{python}\nimport pandas as pd\n\n```\n\n\n\n```{python}\n\n\ndf_python = r.df_py\n\n# Print the Python dataframe\nprint(df_python)\n\n```\n\n\n\n```{python}\nresult_pandas = df_python.groupby('cyl').size().reset_index(name='n')\nprint(result_pandas)\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","theme":"solar","title-block-banner":true,"title":"R Basic with dplyr and data.table","author":"Yousuf Ali","date":"2024-05-29","categories":["code","R","data.table","dplyr"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}