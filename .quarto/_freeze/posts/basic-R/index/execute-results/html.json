{
  "hash": "93c8bd016abacc2f482de03836d389c3",
  "result": {
    "markdown": "---\ntitle: \"R Basic with dplyr and data.table\"\nauthor: \"Yousuf Ali\"\ndate: \"2024-05-29\"\ncategories: [code, R, data.table, dplyr]\nformat: html\n---\n\n\n\n\n:::{layout-ncol=3}\n\n### data.table\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(data.table)\ndt <- mtcars\ndata.table::setDT(dt)\n```\n:::\n\n\n### dplyr \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(magrittr)\ndf <- mtcars\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbaseR <- aggregate(. ~ cyl, data = df, FUN = length)\nbaseR <- baseR[c(\"cyl\", \"mpg\")]  # Adjust column names if needed\nprint(baseR)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  cyl mpg\n1   4  11\n2   6   7\n3   8  14\n```\n:::\n:::\n\n\n:::\n\n### group by\n\n\n:::{layout-ncol=2}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt[, .(n=.N), by= .(cyl)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     cyl     n\n   <num> <int>\n1:     6     7\n2:     4    11\n3:     8    14\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% group_by(cyl) %>% \n  summarize(n=n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n    cyl     n\n  <dbl> <int>\n1     4    11\n2     6     7\n3     8    14\n```\n:::\n:::\n\n\n:::\n\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt[, .(avg= mean(mpg)), by= .(cyl)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     cyl      avg\n   <num>    <num>\n1:     6 19.74286\n2:     4 26.66364\n3:     8 15.10000\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% group_by(cyl) %>% \n  summarize(avg=mean(mpg))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n    cyl   avg\n  <dbl> <dbl>\n1     4  26.7\n2     6  19.7\n3     8  15.1\n```\n:::\n:::\n\n\n:::\n\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt[, .(avg= mean(mpg)), by= .(cyl,gear)]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     cyl  gear    avg\n   <num> <num>  <num>\n1:     6     4 19.750\n2:     4     4 26.925\n3:     6     3 19.750\n4:     8     3 15.050\n5:     4     3 21.500\n6:     4     5 28.200\n7:     8     5 15.400\n8:     6     5 19.700\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% group_by(cyl,gear) %>% \n  summarize(avg=mean(mpg))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n# Groups:   cyl [3]\n    cyl  gear   avg\n  <dbl> <dbl> <dbl>\n1     4     3  21.5\n2     4     4  26.9\n3     4     5  28.2\n4     6     3  19.8\n5     6     4  19.8\n6     6     5  19.7\n7     8     3  15.0\n8     8     5  15.4\n```\n:::\n:::\n\n\n:::\n\n# pivot\n\n- [link](https://www.statology.org/pivot_longer-in-r/)\n\n::: {layout-ncol=2}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# wide dataframe\nwide_dt <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\ndata.table::setDT(wide_dt)\nhead(wide_dt)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   player year1 year2\n   <char> <num> <num>\n1:      A    12    22\n2:      B    15    29\n3:      C    19    18\n4:      D    19    12\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwide_df <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\nwide_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  player year1 year2\n1      A    12    22\n2      B    15    29\n3      C    19    18\n4      D    19    12\n```\n:::\n:::\n\n\n:::\n\n::: {layout-ncol=2}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# wide dataframe to long dataframe\nwide_to_long <- data.table::melt(wide_dt,\n                                 measure.vars=c('year1','year2'),\n                                 variable.name= 'year',\n                                 value.name = 'points')\nwide_to_long\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   player   year points\n   <char> <fctr>  <num>\n1:      A  year1     12\n2:      B  year1     15\n3:      C  year1     19\n4:      D  year1     19\n5:      A  year2     22\n6:      B  year2     29\n7:      C  year2     18\n8:      D  year2     12\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_df <- tidyr::pivot_longer(wide_df,\n                    cols=c('year1', 'year2'),\n                    names_to='year',\n                    values_to='points')\n\nlong_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n  player year  points\n  <chr>  <chr>  <dbl>\n1 A      year1     12\n2 A      year2     22\n3 B      year1     15\n4 B      year2     29\n5 C      year1     19\n6 C      year2     18\n7 D      year1     19\n8 D      year2     12\n```\n:::\n:::\n\n\n:::\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# long dataframe to wide dataframe\nlong_to_wide <- data.table::dcast(wide_to_long, \n                                  player ~ year,\n                                  value.var = 'points')\nlong_to_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <player>\n   player year1 year2\n   <char> <num> <num>\n1:      A    12    22\n2:      B    15    29\n3:      C    19    18\n4:      D    19    12\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlong_to_wide_df <- tidyr::pivot_wider(long_df,\n                              names_from = 'year',\n                              values_from = 'points')\nlong_to_wide_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  player year1 year2\n  <chr>  <dbl> <dbl>\n1 A         12    22\n2 B         15    29\n3 C         19    18\n4 D         19    12\n```\n:::\n:::\n\n\n:::\n\n#### pivot in base R with reshape()\n##### long to wide\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# base R, reshape function\nbase_wide <- data.frame(player=c('A', 'B', 'C', 'D'),\n                 year1=c(12, 15, 19, 19),\n                 year2=c(22, 29, 18, 12))\nbase_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  player year1 year2\n1      A    12    22\n2      B    15    29\n3      C    19    18\n4      D    19    12\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# wide to long\nlong_df <- reshape(\n  base_wide,\n  direction = \"long\",\n  varying = list(c(\"year1\", \"year2\")),\n  v.names = \"points\",\n  idvar = \"player\",\n  times = c(\"year1\", \"year2\"),\n  timevar = \"year\"\n)\nlong_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        player  year points\nA.year1      A year1     12\nB.year1      B year1     15\nC.year1      C year1     19\nD.year1      D year1     19\nA.year2      A year2     22\nB.year2      B year2     29\nC.year2      C year2     18\nD.year2      D year2     12\n```\n:::\n:::\n\n\n:::\n\n#### long to wide\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# long data\nhead(wide_to_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   player   year points\n   <char> <fctr>  <num>\n1:      A  year1     12\n2:      B  year1     15\n3:      C  year1     19\n4:      D  year1     19\n5:      A  year2     22\n6:      B  year2     29\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# from long to wide\nreshape(wide_to_long, direction = 'wide',idvar = 'player',\n        timevar = 'year', v.names = 'points', sep = '_')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   player points_year1 points_year2\n   <char>        <num>        <num>\n1:      A           12           22\n2:      B           15           29\n3:      C           19           18\n4:      D           19           12\n```\n:::\n:::\n\n\n\n::: \n\n### Join \n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- data.table(Id  = c(\"A\", \"B\", \"C\", \"C\"),\n                X1  = c(1L, 3L, 5L, 7L),\n                XY  = c(\"x2\", \"x4\", \"x6\", \"x8\"),\n                key = \"Id\")\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY\n   <char> <int> <char>\n1:      A     1     x2\n2:      B     3     x4\n3:      C     5     x6\n4:      C     7     x8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- data.table(Id  = c(\"A\", \"B\", \"B\", \"D\"),\n                Y1  = c(1L, 3L, 5L, 7L),\n                XY  = c(\"y1\", \"y3\", \"y5\", \"y7\"),\n                key = \"Id\")\n\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    Y1     XY\n   <char> <int> <char>\n1:      A     1     y1\n2:      B     3     y3\n3:      B     5     y5\n4:      D     7     y7\n```\n:::\n:::\n\n\n:::\n\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny[x, on = \"Id\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    Y1     XY    X1   i.XY\n   <char> <int> <char> <int> <char>\n1:      A     1     y1     1     x2\n2:      B     3     y3     3     x4\n3:      B     5     y5     3     x4\n4:      C    NA   <NA>     5     x6\n5:      C    NA   <NA>     7     x8\n```\n:::\n\n```{.r .cell-code}\n# y[x, on = .(Id_x=Id_y)] # if different column name\n# merge(x, y, all.x = TRUE, by = \"Id\")\n# merge(x, y, all.x = TRUE, by.x = \"x_column\", by.y = \"y_column\") \n# if column name different\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(x, y, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1   XY.x    Y1   XY.y\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n4:      C     5     x6    NA   <NA>\n5:      C     7     x8    NA   <NA>\n```\n:::\n\n```{.r .cell-code}\n# left_join(x, y, by.x = \"x_column\", by.y= \"y_column\") # if column\n#name different\n```\n:::\n\n\n:::\n\n\n\n::: {layout-ncol=2}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx[y, on = \"Id\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY    Y1   i.XY\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n4:      D    NA   <NA>     7     y7\n```\n:::\n\n```{.r .cell-code}\n# merge(x, y, all.y = TRUE, by = \"Id\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nright_join(x, y, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1   XY.x    Y1   XY.y\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n4:      D    NA   <NA>     7     y7\n```\n:::\n:::\n\n\n:::\n\n#### matching rows from both x and y\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx[y, on = \"Id\", nomatch = 0]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY    Y1   i.XY\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n```\n:::\n\n```{.r .cell-code}\n# merge(x, y)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_join(x, y, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1   XY.x    Y1   XY.y\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n```\n:::\n:::\n\n\n:::\n\n#### all the rows from x and y\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerge(x, y, all = TRUE, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1   XY.x    Y1   XY.y\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n4:      C     5     x6    NA   <NA>\n5:      C     7     x8    NA   <NA>\n6:      D    NA   <NA>     7     y7\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join(x, y, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1   XY.x    Y1   XY.y\n   <char> <int> <char> <int> <char>\n1:      A     1     x2     1     y1\n2:      B     3     x4     3     y3\n3:      B     3     x4     5     y5\n4:      C     5     x6    NA   <NA>\n5:      C     7     x8    NA   <NA>\n6:      D    NA   <NA>     7     y7\n```\n:::\n:::\n\n\n:::\n\n#### Return rows from x matching y\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(x[y$Id, on = \"Id\", nomatch = 0])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY\n   <char> <int> <char>\n1:      A     1     x2\n2:      B     3     x4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsemi_join(x, y, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY\n   <char> <int> <char>\n1:      A     1     x2\n2:      B     3     x4\n```\n:::\n:::\n\n\n:::\n\n\n#### Return rows from x not matching y\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx[!y, on = \"Id\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY\n   <char> <int> <char>\n1:      C     5     x6\n2:      C     7     x8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanti_join(x, y, by = \"Id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKey: <Id>\n       Id    X1     XY\n   <char> <int> <char>\n1:      C     5     x6\n2:      C     7     x8\n```\n:::\n:::\n\n\n:::\n\n## bind\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- mtcars[1:5, 1:4]\ny <- mtcars[6:10,1:4]\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     mpg   cyl  disp    hp\n   <num> <num> <num> <num>\n1:  21.0     6   160   110\n2:  21.0     6   160   110\n3:  22.8     4   108    93\n4:  21.4     6   258   110\n5:  18.7     8   360   175\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     mpg   cyl  disp    hp\n   <num> <num> <num> <num>\n1:  18.1     6 225.0   105\n2:  14.3     8 360.0   245\n3:  24.4     4 146.7    62\n4:  22.8     4 140.8    95\n5:  19.2     6 167.6   123\n```\n:::\n:::\n\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_dt <- data.table::as.data.table(x)\ny_dt <- data.table::as.data.table(y)\n```\n:::\n\n\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.table::rbindlist(list(x_dt,y_dt))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mpg   cyl  disp    hp\n    <num> <num> <num> <num>\n 1:  21.0     6 160.0   110\n 2:  21.0     6 160.0   110\n 3:  22.8     4 108.0    93\n 4:  21.4     6 258.0   110\n 5:  18.7     8 360.0   175\n 6:  18.1     6 225.0   105\n 7:  14.3     8 360.0   245\n 8:  24.4     4 146.7    62\n 9:  22.8     4 140.8    95\n10:  19.2     6 167.6   123\n```\n:::\n\n```{.r .cell-code}\n# data.table::rbindlist(list(x_dt,y_dt), \n                        # use.names = FALSE,\n                          # fill = FALSE,\n#                       idcol = 'id')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndplyr::bind_rows(x,y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      mpg   cyl  disp    hp\n    <num> <num> <num> <num>\n 1:  21.0     6 160.0   110\n 2:  21.0     6 160.0   110\n 3:  22.8     4 108.0    93\n 4:  21.4     6 258.0   110\n 5:  18.7     8 360.0   175\n 6:  18.1     6 225.0   105\n 7:  14.3     8 360.0   245\n 8:  24.4     4 146.7    62\n 9:  22.8     4 140.8    95\n10:  19.2     6 167.6   123\n```\n:::\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n::: {layout-ncol=2}\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n\ndf_py <- reticulate::r_to_py(df)\n```\n:::\n\n\n:::\n\n\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\ndf_python = r.df_py\n\n# Print the Python dataframe\nprint(df_python)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     mpg  cyl   disp     hp  drat     wt   qsec   vs   am  gear  carb\n0   21.0  6.0  160.0  110.0  3.90  2.620  16.46  0.0  1.0   4.0   4.0\n1   21.0  6.0  160.0  110.0  3.90  2.875  17.02  0.0  1.0   4.0   4.0\n2   22.8  4.0  108.0   93.0  3.85  2.320  18.61  1.0  1.0   4.0   1.0\n3   21.4  6.0  258.0  110.0  3.08  3.215  19.44  1.0  0.0   3.0   1.0\n4   18.7  8.0  360.0  175.0  3.15  3.440  17.02  0.0  0.0   3.0   2.0\n5   18.1  6.0  225.0  105.0  2.76  3.460  20.22  1.0  0.0   3.0   1.0\n6   14.3  8.0  360.0  245.0  3.21  3.570  15.84  0.0  0.0   3.0   4.0\n7   24.4  4.0  146.7   62.0  3.69  3.190  20.00  1.0  0.0   4.0   2.0\n8   22.8  4.0  140.8   95.0  3.92  3.150  22.90  1.0  0.0   4.0   2.0\n9   19.2  6.0  167.6  123.0  3.92  3.440  18.30  1.0  0.0   4.0   4.0\n10  17.8  6.0  167.6  123.0  3.92  3.440  18.90  1.0  0.0   4.0   4.0\n11  16.4  8.0  275.8  180.0  3.07  4.070  17.40  0.0  0.0   3.0   3.0\n12  17.3  8.0  275.8  180.0  3.07  3.730  17.60  0.0  0.0   3.0   3.0\n13  15.2  8.0  275.8  180.0  3.07  3.780  18.00  0.0  0.0   3.0   3.0\n14  10.4  8.0  472.0  205.0  2.93  5.250  17.98  0.0  0.0   3.0   4.0\n15  10.4  8.0  460.0  215.0  3.00  5.424  17.82  0.0  0.0   3.0   4.0\n16  14.7  8.0  440.0  230.0  3.23  5.345  17.42  0.0  0.0   3.0   4.0\n17  32.4  4.0   78.7   66.0  4.08  2.200  19.47  1.0  1.0   4.0   1.0\n18  30.4  4.0   75.7   52.0  4.93  1.615  18.52  1.0  1.0   4.0   2.0\n19  33.9  4.0   71.1   65.0  4.22  1.835  19.90  1.0  1.0   4.0   1.0\n20  21.5  4.0  120.1   97.0  3.70  2.465  20.01  1.0  0.0   3.0   1.0\n21  15.5  8.0  318.0  150.0  2.76  3.520  16.87  0.0  0.0   3.0   2.0\n22  15.2  8.0  304.0  150.0  3.15  3.435  17.30  0.0  0.0   3.0   2.0\n23  13.3  8.0  350.0  245.0  3.73  3.840  15.41  0.0  0.0   3.0   4.0\n24  19.2  8.0  400.0  175.0  3.08  3.845  17.05  0.0  0.0   3.0   2.0\n25  27.3  4.0   79.0   66.0  4.08  1.935  18.90  1.0  1.0   4.0   1.0\n26  26.0  4.0  120.3   91.0  4.43  2.140  16.70  0.0  1.0   5.0   2.0\n27  30.4  4.0   95.1  113.0  3.77  1.513  16.90  1.0  1.0   5.0   2.0\n28  15.8  8.0  351.0  264.0  4.22  3.170  14.50  0.0  1.0   5.0   4.0\n29  19.7  6.0  145.0  175.0  3.62  2.770  15.50  0.0  1.0   5.0   6.0\n30  15.0  8.0  301.0  335.0  3.54  3.570  14.60  0.0  1.0   5.0   8.0\n31  21.4  4.0  121.0  109.0  4.11  2.780  18.60  1.0  1.0   4.0   2.0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nresult_pandas = df_python.groupby('cyl').size().reset_index(name='n')\nprint(result_pandas)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   cyl   n\n0  4.0  11\n1  6.0   7\n2  8.0  14\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}